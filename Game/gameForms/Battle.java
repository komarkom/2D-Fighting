package gameForms;

import gameServer.Server;
import gameServer.Message;
import javax.swing.ImageIcon;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author komarov
 */
public class Battle extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    private static int countAttack;
    private static int countDefense;
    private final Server server;
    
    private final ArrayList<javax.swing.JCheckBox> attackList;
    private final ArrayList<javax.swing.JCheckBox> defenseList;
    private String battleLog;
         
    public Battle() {
        initComponents();
        countAttack = 0;
        countDefense = 0;
        server = new Server();
        battleLog = new String();
        attackList = new ArrayList();
        defenseList = new ArrayList();
        
        attackList.add(headAttack);
        attackList.add(bodyAttack);
        attackList.add(rightHandAttack);
        attackList.add(leftHandAttack);
        attackList.add(rightLegAttack);
        attackList.add(leftLegAttack);
        
        defenseList.add(headDefense);
        defenseList.add(bodyDefense);
        defenseList.add(rightHandDefense);
        defenseList.add(leftHandDefense);
        defenseList.add(rightLegDefense);
        defenseList.add(leftLegDefense); 
        
        imagePanel1.setImage(new ImageIcon(this.getClass().getResource("/pictures/man.jpg")).getImage());
        imagePanel2.setImage(new ImageIcon(this.getClass().getResource("/pictures/man.jpg")).getImage());
        
        playerHPLabel.setText("HP: " +
                        Integer.toString(server.getPlayer().getCurHP()) + "/" +
                        Integer.toString(server.getPlayer().getMaxHP()));
        botHPLabel.setText("HP: " +
                        Integer.toString(server.getBot().getCurHP()) + "/" +
                        Integer.toString(server.getBot().getMaxHP()));
    }
    
    private void blockAttackCheck() {
        if (countAttack != 2)
        {
            for(int i = 0; i < 6; ++i)
            {
                attackList.get(i).setEnabled(true);
            }
        }
        else
        {
            for(int i = 0; i < 6; ++i)
            {
                if(!attackList.get(i).isSelected())
                    attackList.get(i).setEnabled(false);
            }
        }
    }
    private void blockDefenseCheck() {
        if (countDefense != 2)
        {
            for(int i = 0; i < 6; ++i)
            {
                defenseList.get(i).setEnabled(true);
            }
        }
        else
        {
            for(int i = 0; i < 6; ++i)
            {
                if(!defenseList.get(i).isSelected())
                    defenseList.get(i).setEnabled(false);
            }
        }
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        logger = new javax.swing.JTextArea();
        botIcon = new javax.swing.JLabel();
        playerIcon = new javax.swing.JLabel();
        battleLogLabel = new javax.swing.JLabel();
        playerHPLabel = new javax.swing.JLabel();
        botHPLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        imagePanel2 = new ImagePanel();
        bodyAttack = new javax.swing.JCheckBox();
        headAttack = new javax.swing.JCheckBox();
        leftHandAttack = new javax.swing.JCheckBox();
        rightHandAttack = new javax.swing.JCheckBox();
        rightLegAttack = new javax.swing.JCheckBox();
        leftLegAttack = new javax.swing.JCheckBox();
        imagePanel1 = new ImagePanel();
        leftLegDefense = new javax.swing.JCheckBox();
        rightLegDefense = new javax.swing.JCheckBox();
        leftHandDefense = new javax.swing.JCheckBox();
        rightHandDefense = new javax.swing.JCheckBox();
        bodyDefense = new javax.swing.JCheckBox();
        headDefense = new javax.swing.JCheckBox();
        attackLabel = new javax.swing.JLabel();
        defenseLabel = new javax.swing.JLabel();
        botName = new javax.swing.JLabel();
        playerName = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        logger.setColumns(40);
        logger.setRows(5);
        jScrollPane1.setViewportView(logger);

        botIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/bot.jpg"))); // NOI18N
        botIcon.setText("bot");

        playerIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/player.jpg"))); // NOI18N

        battleLogLabel.setText("Лог боя:");

        playerHPLabel.setText("HP:");

        botHPLabel.setText("HP:");

        jButton1.setText("Сделать ход");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bodyAttack.setToolTipText("Атаковать туловище");
        bodyAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodyAttackActionPerformed(evt);
            }
        });

        headAttack.setToolTipText("Атаковать голову");
        headAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headAttackActionPerformed(evt);
            }
        });

        leftHandAttack.setToolTipText("Атаковать левую руку");
        leftHandAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftHandAttackActionPerformed(evt);
            }
        });

        rightHandAttack.setToolTipText("Атаковать правую руку");
        rightHandAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightHandAttackActionPerformed(evt);
            }
        });

        rightLegAttack.setToolTipText("Атаковать правую ногу");
        rightLegAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightLegAttackActionPerformed(evt);
            }
        });

        leftLegAttack.setToolTipText("Атаковать левую ногу");
        leftLegAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftLegAttackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanel2Layout = new javax.swing.GroupLayout(imagePanel2);
        imagePanel2.setLayout(imagePanel2Layout);
        imagePanel2Layout.setHorizontalGroup(
            imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel2Layout.createSequentialGroup()
                        .addGap(0, 63, Short.MAX_VALUE)
                        .addComponent(leftLegAttack)
                        .addGap(43, 43, 43)
                        .addComponent(rightLegAttack)
                        .addGap(98, 98, 98))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel2Layout.createSequentialGroup()
                        .addGroup(imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(headAttack)
                            .addGroup(imagePanel2Layout.createSequentialGroup()
                                .addComponent(leftHandAttack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bodyAttack)))
                        .addGap(59, 59, 59)
                        .addComponent(rightHandAttack)
                        .addGap(50, 50, 50))))
        );
        imagePanel2Layout.setVerticalGroup(
            imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel2Layout.createSequentialGroup()
                .addGroup(imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(imagePanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rightLegAttack))
                    .addGroup(imagePanel2Layout.createSequentialGroup()
                        .addGroup(imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(leftHandAttack)
                            .addGroup(imagePanel2Layout.createSequentialGroup()
                                .addGroup(imagePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(imagePanel2Layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(rightHandAttack))
                                    .addGroup(imagePanel2Layout.createSequentialGroup()
                                        .addGap(45, 45, 45)
                                        .addComponent(headAttack)))
                                .addGap(63, 63, 63)
                                .addComponent(bodyAttack)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(leftLegAttack)))
                .addGap(24, 24, 24))
        );

        leftLegDefense.setToolTipText("Защитить левую ногу");
        leftLegDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftLegDefenseActionPerformed(evt);
            }
        });

        rightLegDefense.setToolTipText("Защитить правую ногу");
        rightLegDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightLegDefenseActionPerformed(evt);
            }
        });

        leftHandDefense.setToolTipText("Защитить левую руку");
        leftHandDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftHandDefenseActionPerformed(evt);
            }
        });

        rightHandDefense.setToolTipText("Защитить правую руку");
        rightHandDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightHandDefenseActionPerformed(evt);
            }
        });

        bodyDefense.setToolTipText("Защитить туловище");
        bodyDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bodyDefenseActionPerformed(evt);
            }
        });

        headDefense.setToolTipText("Защитить голову");
        headDefense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headDefenseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(imagePanel1Layout.createSequentialGroup()
                        .addComponent(leftHandDefense)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headDefense)
                            .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                                    .addComponent(rightHandDefense)
                                    .addGap(52, 52, 52))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                                    .addComponent(bodyDefense)
                                    .addGap(119, 119, 119)))))
                    .addGroup(imagePanel1Layout.createSequentialGroup()
                        .addGap(0, 66, Short.MAX_VALUE)
                        .addComponent(leftLegDefense)
                        .addGap(30, 30, 30)
                        .addComponent(rightLegDefense)
                        .addGap(98, 98, 98))))
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(headDefense)
                .addGap(18, 18, 18)
                .addComponent(rightHandDefense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bodyDefense, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leftHandDefense, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(67, 67, 67)
                .addGroup(imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rightLegDefense)
                    .addComponent(leftLegDefense))
                .addGap(30, 30, 30))
        );

        attackLabel.setText("Атака:");

        defenseLabel.setText("Защита:");

        botName.setText("Бот");

        playerName.setText("Игрок");

        jMenu1.setText("Файл");

        jMenuItem1.setText("Начать новую игру");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Сохранить персонажа");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Выход");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Справка");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(imagePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192)
                                .addComponent(playerIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(battleLogLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerName))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(524, 524, 524))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(attackLabel)
                .addGap(165, 165, 165)
                .addComponent(botHPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(playerHPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184)
                .addComponent(defenseLabel)
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(playerName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(playerIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(battleLogLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playerHPLabel)
                                    .addComponent(botHPLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defenseLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attackLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imagePanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        botIcon.getAccessibleContext().setAccessibleName(" ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

   //Защита левой ноги
    private void leftLegDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftLegDefenseActionPerformed
        if (leftLegDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_leftLegDefenseActionPerformed

    //Защита правой ноги
    private void rightLegDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightLegDefenseActionPerformed

        if (rightLegDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_rightLegDefenseActionPerformed

    //Защита левой руки
    private void leftHandDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftHandDefenseActionPerformed
        if (leftHandDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_leftHandDefenseActionPerformed

    //Защита правой руки
    private void rightHandDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightHandDefenseActionPerformed
        if (rightHandDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_rightHandDefenseActionPerformed

    //Защита туловища
    private void bodyDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodyDefenseActionPerformed
        if (bodyDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_bodyDefenseActionPerformed

    //Защита головы
    private void headDefenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headDefenseActionPerformed
        if (headDefense.isSelected())
            ++countDefense;
        else
            --countDefense;

        blockDefenseCheck();
    }//GEN-LAST:event_headDefenseActionPerformed

    //Атака левой ноги
    private void leftLegAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftLegAttackActionPerformed
        if (leftLegAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_leftLegAttackActionPerformed

    //Атака правой ноги
    private void rightLegAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightLegAttackActionPerformed
        if (rightLegAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_rightLegAttackActionPerformed

    //Атака левой руки
    private void leftHandAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftHandAttackActionPerformed
        if (leftHandAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_leftHandAttackActionPerformed

    //Атака правой руки
    private void rightHandAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightHandAttackActionPerformed

        if (rightHandAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_rightHandAttackActionPerformed

    //Атака туловища
    private void bodyAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bodyAttackActionPerformed
        if (bodyAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_bodyAttackActionPerformed

    //Атака головы
    private void headAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headAttackActionPerformed
        if (headAttack.isSelected())
            ++countAttack;
        else
            --countAttack;

        blockAttackCheck();
    }//GEN-LAST:event_headAttackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (countAttack != 2)
        {
             battleLog += "Использованы не все очки атаки.\n";
             logger.setText(battleLog);
             return;
        }
        if (countDefense != 2)
        {
             battleLog += "Использованы не все очки защиты.\n";
             logger.setText(battleLog);
             return;
        }
        
        boolean[] attack = new boolean[6];
        boolean[] defense = new boolean[6];

        for (int i = 0; i < 6; ++i)
        {
            attack[i] = attackList.get(i).isSelected();
            defense[i] = defenseList.get(i).isSelected();
        }
        
        battleLog += server.translateMessage(new Message(attack,defense));
        playerHPLabel.setText("HP: " +
                        Integer.toString(server.getPlayer().getCurHP()) + "/" +
                        Integer.toString(server.getPlayer().getMaxHP()));
        botHPLabel.setText("HP: " +
                        Integer.toString(server.getBot().getCurHP()) + "/" +
                        Integer.toString(server.getBot().getMaxHP()));
        logger.setText(battleLog);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Battle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Battle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attackLabel;
    private javax.swing.JLabel battleLogLabel;
    private javax.swing.JCheckBox bodyAttack;
    private javax.swing.JCheckBox bodyDefense;
    private javax.swing.JLabel botHPLabel;
    private javax.swing.JLabel botIcon;
    private javax.swing.JLabel botName;
    private javax.swing.JLabel defenseLabel;
    private javax.swing.JCheckBox headAttack;
    private javax.swing.JCheckBox headDefense;
    private ImagePanel imagePanel1;
    private ImagePanel imagePanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox leftHandAttack;
    private javax.swing.JCheckBox leftHandDefense;
    private javax.swing.JCheckBox leftLegAttack;
    private javax.swing.JCheckBox leftLegDefense;
    private javax.swing.JTextArea logger;
    private javax.swing.JLabel playerHPLabel;
    private javax.swing.JLabel playerIcon;
    private javax.swing.JLabel playerName;
    private javax.swing.JCheckBox rightHandAttack;
    private javax.swing.JCheckBox rightHandDefense;
    private javax.swing.JCheckBox rightLegAttack;
    private javax.swing.JCheckBox rightLegDefense;
    // End of variables declaration//GEN-END:variables
}
